<%= content_for :header do %>
    <%= javascript_include_tag "https://maps.googleapis.com/maps/api/js?libraries=geometry&libraries=places&sensor=false" %>
    <script>
      var map = null;
      var places = [];
      var numOfPlace = 0;
      var points = [];
      var directionsDisplay = new google.maps.DirectionsRenderer({
        draggable: true,
        preserveViewpoint: false
      });

      google.maps.event.addDomListener(window, 'load', initialize);
      google.maps.event.addListener(directionsDisplay, 'directions_changed', function() {
        onDirectionsChanged(directionsDisplay.directions);
      });

      function initialize() {
        // コールバック: 指定座標（緯度、経度）で地図を初期化
        var initMap = function(latitude, longitude) {
          var latlng = new google.maps.LatLng(latitude, longitude);
          var mapOptions = {
            center: latlng,
            zoom: 16,
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };
          map = new google.maps.Map($("#map")[0], mapOptions);
          directionsDisplay.setMap(map);
        };

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(pos) {
            initMap(pos.coords.latitude, pos.coords.longitude);
          }, function(err) {
            initMap(35.686773, 139.68815); // 新宿のあたり
          });
        } else {
          console.log("navigator.geolocation is no supported.");
          initMap(35.686773, 139.68815); // 新宿のあたり
        }
      }

      // 地図上にルート拠点を追加
      var addMarker = function(key, index, total) {
        var request = {
          address: key
        };
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode(request, function(results, status) {
          numOfPlace += 1;

          if (status == google.maps.GeocoderStatus.OK) {
            // console.log(results[0]);
            var location = results[0].geometry.location;

            // マーカーを表示 -> ルート計算で表示されるためコメントアウト
            // var marker = new google.maps.Marker({
            //   position: location,
            //   title: request.address,
            //   map: map,
            //   icon: new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld="+ (index+1) + "|ff7e73|000000"),
            //   shadow: new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow",null,null, new google.maps.Point(12, 35) )
            // });

            points.push(location);

            places.push({
              address: results[0].formatted_address,
              latitude: location.lat(),
              longitude: location.lng()
            });

            // アップロードされた拠点が全て処理された時の処理
            // 有効なルートを検索する
            if (numOfPlace === total) {
              var routeRequest = {
                origin: points[0],
                destination: points[points.length - 1],
                travelMode: google.maps.DirectionsTravelMode.DRIVING
              };
              if (points.length > 1) {
                var waypoints = [];
                for (var i=1; i<points.length-1; i++) {
                  waypoints.push({location: points[i], stopover: true});
                }
                routeRequest.waypoints = waypoints;
              }
              var directionsService = new google.maps.DirectionsService();
              directionsService.route(routeRequest, function(response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                  directionsDisplay.setDirections(response);
                }
              });

              // JS側で取得した位置情報を登録するため、再度POST
              $.ajax({
                url: "/map/places",
                type: 'post',
                data: { places: places }
              });
            }
          } else {
            alert('not found: ' + $scope.searchKey);
          }
        });
      };

      var onDirectionsChanged = function(directions) {
        console.log("directions changed.");
        var paths = directions.routes[0].overview_path.map(function(p) {
          return { lat: p.lat(), lng: p.lng() };
        });
        $("#map_tracks").val(JSON.stringify(paths));
      }
    </script>
<% end %>

<div class="page-header">
  <h1><%= t("common.models.map") %></h1>

  <div class="row">
    <div class="col-md-6">
      <div id="map" data-tap-disabled="true" style="width: 500px; height: 500px;"></div>
      <%= render "tracks/tracks", { tracks: @tracks } %>
    </div>
    <div class="col-md-6">
      <%= form_for @upload_form, url: { action: 'upload_list' }, html: { multipart: true, remote: true, authenticity_token: true } do |f| %>
        <div class="control-group">
          <%= f.label :file, :class => 'control-label' %>
          <div class="controls">
            <%= f.file_field :file, :class => 'form-control' %>
          </div>
        </div>
        <%= f.submit t("button.upload_csv"), :class => 'btn btn-primary' %>
      <% end %>

      <div id="places"></div>
    </div>
  </div>
</div>